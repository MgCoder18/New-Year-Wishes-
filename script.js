document.addEventListener('DOMContentLoaded', function () {
    const fireworksContainer = document.getElementById('fireworks-container');
    setInterval(createFirework, 2000);

    function createFirework() {
        const firework = document.createElement('div');
        firework.className = 'firework';
        firework.style.left = Math.random() * 100 + 'vw';
        fireworksContainer.appendChild(firework);
        setTimeout(() => firework.remove(), 1000);
    }
});

function handleInput() {
    const name = document.getElementById('userInput').value;
    if (name.trim() === "") {
        alert("Please enter a name.");
        return;
    }
    startCountdown(() => displayRandomQuote(name));
    
    // Call changeSong with the normalized name
    changeSong(name);
}

function displayRandomQuote(name) {
    const greeting = document.getElementById('output');
    const quotes = [
        `<strong>рдирд╡рд╡рд░реНрд╖ рдХреА рд╣рд╛рд░реНрджрд┐рдХ рд╢реБрднрдХрд╛рдордирд╛рдПрдВ, ${name}! рдЖрдкрдХреЗ рдЬреАрд╡рди рдореЗрдВ рдЦреБрд╢рд┐рдпрд╛рдБ рдФрд░ рд╕рдлрд▓рддрд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рд╣реЛред</strong>`,
        `<strong>рдмреЗрд╕реНрддреБ рд╡рд░рд╕ рдореБрдмрд╛рд░рдХ, ${name}! рдирдП рд╕рд╛рд▓ рдореЗрдВ рд░реЛрдорд╛рдВрдЪ рдФрд░ рдЖрдирдВрдж рдХреА рдЕрдзрд┐рдХрддрд╛ рд░рд╣реЗред</strong>`,
        `<strong>рдпрд╣ рдирдпрд╛ рд╡рд░реНрд╖ рдЖрдкрдХреЗ рд▓рд┐рдП рдЦреБрд╢рд╣рд╛рд▓реА рдФрд░ рд╕рдореГрджреНрдзрд┐ рд▓рд╛рдП, ${name}!</strong>`,
        `<strong>рдЖрдкрдХреЗ рдирдП рд╡рд░реНрд╖ рдореЗрдВ рдкреНрдпрд╛рд░ рдФрд░ рд╣рдВрд╕реА рдХрд╛ рдорд╛рд╣реМрд▓ рд╣реЛ, ${name}!</strong>`,
        `<strong>${name}, рдЖрдкрдХреЗ рдирдП рд╕рд╛рд▓ рдореЗрдВ рдЦреБрд╢рд┐рдпреЛрдВ рдХреА рдмрд╛рд░рд┐рд╢ рд╣реЛ рдФрд░ рд╣рд░ рджрд┐рди рдЙрддреНрд╕рд╛рд╣ рд╕реЗ рднрд░рд╛ рд╣реЛ!</strong>`,
        `<strong>${name}, рдЗрд╕ рдирдП рд╕рд╛рд▓ рдореЗрдВ рдЖрдкрдХреА рд╕рднреА рдЗрдЪреНрдЫрд╛рдПрдВ рдкреВрд░реА рд╣реЛрдВ рдФрд░ рд╣рд░ рджрд┐рди рдордВрдЧрд▓рдордп рд╣реЛред</strong>`,
        `<strong>${name}, рдЖрдкрдХреЗ рдЬреАрд╡рди рдореЗрдВ рд╕реБрдЦ, рд╢рд╛рдВрддрд┐ рдФрд░ рд╕рдореГрджреНрдзрд┐ рдХрд╛ рд╕рдВрдЪрд╛рд░ рд╣реЛред рдирд╡рд╡рд░реНрд╖ рдХреА рд╣рд╛рд░реНрджрд┐рдХ рд╢реБрднрдХрд╛рдордирд╛рдПрдВ!</strong>`,
        `<strong>рдЖрдиреЗ рд╡рд╛рд▓рд╛ рд╕рд╛рд▓ рдЖрдкрдХреЗ рд▓рд┐рдП рд╕рдкрдиреЛрдВ рдХреЛ рд╕рд╛рдХрд╛рд░ рдХрд░рдиреЗ рд╡рд╛рд▓рд╛ рдмрдиреЗ, ${name}!</strong>`,
        `<strong>${name}, рдпрд╣ рд╕рд╛рд▓ рдЖрдкрдХреЗ рдЬреАрд╡рди рдореЗрдВ рдкреНрд░реЗрдо, рд╣рд░реНрд╖ рдФрд░ рдЙрддреНрд╕рд╛рд╣ рдХреА рдЕрдирдВрдд рдЦреБрд╢рд┐рдпрд╛рдБ рд▓рд╛рдПред</strong>`,
        `<strong>${name}, рдЖрдкрдХреЗ рдЬреАрд╡рди рдореЗрдВ рд╣рдореЗрд╢рд╛ рд╣рдВрд╕реА рдФрд░ рдЦреБрд╢рд┐рдпрд╛рдБ рдмрдиреА рд░рд╣реЗрдВ, рдирд╡рд╡рд░реНрд╖ рдореБрдмрд╛рд░рдХ рд╣реЛ!</strong>`,
        `<strong>рд╣рд░ рдирдИ рд╢реБрд░реБрдЖрдд рдЖрдкрдХреЗ рд▓рд┐рдП рдПрдХ рдирдИ рдЖрд╢рд╛ рдФрд░ рдирдП рдЕрд╡рд╕рд░ рд▓рд╛рдП, ${name}. рдирд╡рд╡рд░реНрд╖ рдХреА рд╢реБрднрдХрд╛рдордирд╛рдПрдБ!</strong>`,
        `<strong>${name}, рдЖрдиреЗ рд╡рд╛рд▓рд╛ рд╕рд╛рд▓ рдЖрдкрдХреЗ рд▓рд┐рдП рд╣рд░ рджрд┐рди рдирдП рд░рдВрдЧ рдФрд░ рдЙрдордВрдЧ рд▓реЗрдХрд░ рдЖрдП!</strong>`,
        `<strong>рдирд╡рд╡рд░реНрд╖ рдЖрдкрдХреЗ рдЬреАрд╡рди рдореЗрдВ рд╕реБрдЦ-рд╢рд╛рдВрддрд┐ рдФрд░ рд╕рдореГрджреНрдзрд┐ рдХрд╛ рд╕рдВрдЪрд╛рд░ рдХрд░реЗ, ${name}!</strong>`,
        `<strong>${name}, рдЗрд╕ рдирд╡рд╡рд░реНрд╖ рдореЗрдВ рдЖрдкрдХреЗ рд╕рднреА рдЕрдзреВрд░реЗ рд╕рдкрдиреЗ рдкреВрд░реЗ рд╣реЛрдВ рдФрд░ рдЖрдкрдХрд╛ рдЬреАрд╡рди рдЦреБрд╢рд┐рдпреЛрдВ рд╕реЗ рднрд░ рдЬрд╛рдП!</strong>`,
        `<strong>${name}, рдЗрд╕ рд╕рд╛рд▓ рдЖрдкрдХреА рд╣рд░ рд╕реБрдмрд╣ рдЙрдЬреНрдЬрд╡рд▓ рдФрд░ рд╣рд░ рд░рд╛рдд рдЪрд╛рдБрджрдиреА рд╕реЗ рдЪрдордХреЗред рдирд╡рд╡рд░реНрд╖ рдХреА рд╣рд╛рд░реНрджрд┐рдХ рд╢реБрднрдХрд╛рдордирд╛рдПрдВ!</strong>`
    ];

    const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
    greeting.innerHTML = randomQuote;
    animateText(greeting);

    // Show final message after 5 seconds and then reload the page
    setTimeout(() => {
        const finalMessage = `<strong>Happy New Year to you and your family, ${name}!</strong><br><strong>Hare Krishna ЁЯТЩ</strong>`;
        greeting.innerHTML = finalMessage;
        animateText(greeting);

        // Reload page after 10 seconds of displaying the final message
        setTimeout(() => {
            window.location.reload();
        }, 10000);
    }, 5000);
}

function startCountdown(callback) {
    let count = 3;
    const countdownElement = document.getElementById('countdown');
    countdownElement.innerText = count;
    countdownElement.style.display = 'block';

    const countdownInterval = setInterval(() => {
        count--;
        if (count >= 0) {
            countdownElement.innerText = count;
        } else {
            clearInterval(countdownInterval);
            countdownElement.style.display = 'none';
            callback();
        }
    }, 1000);
}

function animateText(element) {
    let opacity = 0;
    const interval = setInterval(() => {
        if (opacity >= 1) clearInterval(interval);
        element.style.opacity = opacity;
        opacity += 0.05;
    }, 100);
}

function changeSong(name) {
    // Convert name to lowercase for case insensitive comparison
    const normalizedName = name.toLowerCase();
    
    const songs = {
        'k1': 'krishna1.mp3',  // Match for "k1"
        'k2': 'krishna2.mp3'   // Match for "k2"
    };

    // Use the normalized name to find the corresponding song
    const song = songs[normalizedName] || 'krishna3.mp3';  // Default to 'krishna3.mp3'
    
    // Change the song source and play it
    const songSource = document.getElementById('songSource');
    songSource.src = song;
    
    const backgroundMusic = document.getElementById('backgroundMusic');
    backgroundMusic.load();
    backgroundMusic.play();
}
